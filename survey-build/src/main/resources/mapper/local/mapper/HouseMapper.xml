<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lwch.survey.dao.mapper.HouseMapper">
  <resultMap id="BaseResultMap" type="com.lwch.survey.model.House">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="build_no" jdbcType="VARCHAR" property="buildNo" />
    <result column="lpzh" jdbcType="VARCHAR" property="lpzh" />
    <result column="house_no" jdbcType="VARCHAR" property="houseNo" />
    <result column="build_structure" jdbcType="VARCHAR" property="buildStructure" />
    <result column="layers_total" jdbcType="INTEGER" property="layersTotal" />
    <result column="layers_location" jdbcType="INTEGER" property="layersLocation" />
    <result column="build_area" jdbcType="DOUBLE" property="buildArea" />
    <result column="inner_area" jdbcType="DOUBLE" property="innerArea" />
    <result column="share_area" jdbcType="DOUBLE" property="shareArea" />
    <result column="ytmj" jdbcType="DOUBLE" property="ytmj" />
    <result column="room_id" jdbcType="VARCHAR" property="roomId" />
    <result column="owner_flat" jdbcType="VARCHAR" property="ownerFlat" />
    <result column="owner_room" jdbcType="VARCHAR" property="ownerRoom" />
    <result column="plan_use" jdbcType="VARCHAR" property="planUse" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="func_name" jdbcType="VARCHAR" property="funcName" />
    <result column="myc" jdbcType="VARCHAR" property="myc" />
    <result column="zrzzc" jdbcType="VARCHAR" property="zrzzc" />
    <result column="ftxs" jdbcType="DOUBLE" property="ftxs" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, build_no, lpzh, house_no, build_structure, layers_total, layers_location, build_area, 
    inner_area, share_area, ytmj, room_id, owner_flat, owner_room, plan_use, update_time, 
    func_name, myc, zrzzc, ftxs
  </sql>
  <select id="selectByExample" parameterType="com.lwch.survey.model.HouseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.lwch.survey.model.HouseExample">
    delete from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lwch.survey.model.House">
    insert into house (id, build_no, lpzh, 
      house_no, build_structure, layers_total, 
      layers_location, build_area, inner_area, 
      share_area, ytmj, room_id, 
      owner_flat, owner_room, plan_use, 
      update_time, func_name, myc, 
      zrzzc, ftxs)
    values (#{id,jdbcType=VARCHAR}, #{buildNo,jdbcType=VARCHAR}, #{lpzh,jdbcType=VARCHAR}, 
      #{houseNo,jdbcType=VARCHAR}, #{buildStructure,jdbcType=VARCHAR}, #{layersTotal,jdbcType=INTEGER}, 
      #{layersLocation,jdbcType=INTEGER}, #{buildArea,jdbcType=DOUBLE}, #{innerArea,jdbcType=DOUBLE}, 
      #{shareArea,jdbcType=DOUBLE}, #{ytmj,jdbcType=DOUBLE}, #{roomId,jdbcType=VARCHAR}, 
      #{ownerFlat,jdbcType=VARCHAR}, #{ownerRoom,jdbcType=VARCHAR}, #{planUse,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{funcName,jdbcType=VARCHAR}, #{myc,jdbcType=VARCHAR}, 
      #{zrzzc,jdbcType=VARCHAR}, #{ftxs,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.lwch.survey.model.House">
    insert into house
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="buildNo != null">
        build_no,
      </if>
      <if test="lpzh != null">
        lpzh,
      </if>
      <if test="houseNo != null">
        house_no,
      </if>
      <if test="buildStructure != null">
        build_structure,
      </if>
      <if test="layersTotal != null">
        layers_total,
      </if>
      <if test="layersLocation != null">
        layers_location,
      </if>
      <if test="buildArea != null">
        build_area,
      </if>
      <if test="innerArea != null">
        inner_area,
      </if>
      <if test="shareArea != null">
        share_area,
      </if>
      <if test="ytmj != null">
        ytmj,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="ownerFlat != null">
        owner_flat,
      </if>
      <if test="ownerRoom != null">
        owner_room,
      </if>
      <if test="planUse != null">
        plan_use,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="funcName != null">
        func_name,
      </if>
      <if test="myc != null">
        myc,
      </if>
      <if test="zrzzc != null">
        zrzzc,
      </if>
      <if test="ftxs != null">
        ftxs,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="buildNo != null">
        #{buildNo,jdbcType=VARCHAR},
      </if>
      <if test="lpzh != null">
        #{lpzh,jdbcType=VARCHAR},
      </if>
      <if test="houseNo != null">
        #{houseNo,jdbcType=VARCHAR},
      </if>
      <if test="buildStructure != null">
        #{buildStructure,jdbcType=VARCHAR},
      </if>
      <if test="layersTotal != null">
        #{layersTotal,jdbcType=INTEGER},
      </if>
      <if test="layersLocation != null">
        #{layersLocation,jdbcType=INTEGER},
      </if>
      <if test="buildArea != null">
        #{buildArea,jdbcType=DOUBLE},
      </if>
      <if test="innerArea != null">
        #{innerArea,jdbcType=DOUBLE},
      </if>
      <if test="shareArea != null">
        #{shareArea,jdbcType=DOUBLE},
      </if>
      <if test="ytmj != null">
        #{ytmj,jdbcType=DOUBLE},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="ownerFlat != null">
        #{ownerFlat,jdbcType=VARCHAR},
      </if>
      <if test="ownerRoom != null">
        #{ownerRoom,jdbcType=VARCHAR},
      </if>
      <if test="planUse != null">
        #{planUse,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="funcName != null">
        #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="myc != null">
        #{myc,jdbcType=VARCHAR},
      </if>
      <if test="zrzzc != null">
        #{zrzzc,jdbcType=VARCHAR},
      </if>
      <if test="ftxs != null">
        #{ftxs,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lwch.survey.model.HouseExample" resultType="java.lang.Long">
    select count(*) from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update house
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.buildNo != null">
        build_no = #{record.buildNo,jdbcType=VARCHAR},
      </if>
      <if test="record.lpzh != null">
        lpzh = #{record.lpzh,jdbcType=VARCHAR},
      </if>
      <if test="record.houseNo != null">
        house_no = #{record.houseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.buildStructure != null">
        build_structure = #{record.buildStructure,jdbcType=VARCHAR},
      </if>
      <if test="record.layersTotal != null">
        layers_total = #{record.layersTotal,jdbcType=INTEGER},
      </if>
      <if test="record.layersLocation != null">
        layers_location = #{record.layersLocation,jdbcType=INTEGER},
      </if>
      <if test="record.buildArea != null">
        build_area = #{record.buildArea,jdbcType=DOUBLE},
      </if>
      <if test="record.innerArea != null">
        inner_area = #{record.innerArea,jdbcType=DOUBLE},
      </if>
      <if test="record.shareArea != null">
        share_area = #{record.shareArea,jdbcType=DOUBLE},
      </if>
      <if test="record.ytmj != null">
        ytmj = #{record.ytmj,jdbcType=DOUBLE},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerFlat != null">
        owner_flat = #{record.ownerFlat,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerRoom != null">
        owner_room = #{record.ownerRoom,jdbcType=VARCHAR},
      </if>
      <if test="record.planUse != null">
        plan_use = #{record.planUse,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.funcName != null">
        func_name = #{record.funcName,jdbcType=VARCHAR},
      </if>
      <if test="record.myc != null">
        myc = #{record.myc,jdbcType=VARCHAR},
      </if>
      <if test="record.zrzzc != null">
        zrzzc = #{record.zrzzc,jdbcType=VARCHAR},
      </if>
      <if test="record.ftxs != null">
        ftxs = #{record.ftxs,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update house
    set id = #{record.id,jdbcType=VARCHAR},
      build_no = #{record.buildNo,jdbcType=VARCHAR},
      lpzh = #{record.lpzh,jdbcType=VARCHAR},
      house_no = #{record.houseNo,jdbcType=VARCHAR},
      build_structure = #{record.buildStructure,jdbcType=VARCHAR},
      layers_total = #{record.layersTotal,jdbcType=INTEGER},
      layers_location = #{record.layersLocation,jdbcType=INTEGER},
      build_area = #{record.buildArea,jdbcType=DOUBLE},
      inner_area = #{record.innerArea,jdbcType=DOUBLE},
      share_area = #{record.shareArea,jdbcType=DOUBLE},
      ytmj = #{record.ytmj,jdbcType=DOUBLE},
      room_id = #{record.roomId,jdbcType=VARCHAR},
      owner_flat = #{record.ownerFlat,jdbcType=VARCHAR},
      owner_room = #{record.ownerRoom,jdbcType=VARCHAR},
      plan_use = #{record.planUse,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      func_name = #{record.funcName,jdbcType=VARCHAR},
      myc = #{record.myc,jdbcType=VARCHAR},
      zrzzc = #{record.zrzzc,jdbcType=VARCHAR},
      ftxs = #{record.ftxs,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into house  (id, build_no, lpzh, 
        house_no, build_structure, layers_total, 
        layers_location, build_area, inner_area, 
        share_area, ytmj, room_id, 
        owner_flat, owner_room, plan_use, 
        update_time, func_name, myc, 
        zrzzc, ftxs)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.buildNo,jdbcType=VARCHAR}, #{item.lpzh,jdbcType=VARCHAR}, 
        #{item.houseNo,jdbcType=VARCHAR}, #{item.buildStructure,jdbcType=VARCHAR}, #{item.layersTotal,jdbcType=INTEGER}, 
        #{item.layersLocation,jdbcType=INTEGER}, #{item.buildArea,jdbcType=DOUBLE}, #{item.innerArea,jdbcType=DOUBLE}, 
        #{item.shareArea,jdbcType=DOUBLE}, #{item.ytmj,jdbcType=DOUBLE}, #{item.roomId,jdbcType=VARCHAR}, 
        #{item.ownerFlat,jdbcType=VARCHAR}, #{item.ownerRoom,jdbcType=VARCHAR}, #{item.planUse,jdbcType=VARCHAR}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.funcName,jdbcType=VARCHAR}, #{item.myc,jdbcType=VARCHAR}, 
        #{item.zrzzc,jdbcType=VARCHAR}, #{item.ftxs,jdbcType=DOUBLE})
      </foreach>
    </if>
  </insert>
</mapper>